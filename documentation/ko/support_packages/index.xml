<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Support packages on Selenium 문서</title>
    <link>https://www.selenium.dev/documentation/ko/support_packages/</link>
    <description>Recent content in Support packages on Selenium 문서</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <copyright>2013-{year}</copyright>
    
	<atom:link href="https://www.selenium.dev/documentation/ko/support_packages/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Working with colours</title>
      <link>https://www.selenium.dev/documentation/ko/support_packages/working_with_colours/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.selenium.dev/documentation/ko/support_packages/working_with_colours/</guid>
      <description>Page being translated from English to Korean. Do you speak Korean? Help us to translate it by sending us pull requests!
 You will occasionally want to validate the colour of something as part of your tests; the problem is that colour definitions on the web are not constant. Would it not be nice if there was an easy way to compare a HEX representation of a colour with a RGB representation of a colour, or a RGBA representation of a colour with a HSLA representation of a colour?</description>
    </item>
    
    <item>
      <title>Working with select elements</title>
      <link>https://www.selenium.dev/documentation/ko/support_packages/working_with_select_elements/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.selenium.dev/documentation/ko/support_packages/working_with_select_elements/</guid>
      <description>Page being translated from English to Korean. Do you speak Korean? Help us to translate it by sending us pull requests!
 Select elements can require quite a bit of boiler plate code to automate. To reduce this, and make your tests cleaner, there is a Select class in the Selenium support package. To use it, you will need the following import statement:
Java Python C# Ruby JavaScript Kotlin import org.</description>
    </item>
    
    <item>
      <title>마우스 동작 세부 사항</title>
      <link>https://www.selenium.dev/documentation/ko/support_packages/mouse_and_keyboard_actions_in_detail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.selenium.dev/documentation/ko/support_packages/mouse_and_keyboard_actions_in_detail/</guid>
      <description>Page being translated from English to Korean. Do you speak Korean? Help us to translate it by sending us pull requests!
 Mouse represents a mouse event. Mouse actions are performed by using low-level interface which allows us to provide virtualized device input action to the web browser.
clickAndHold It will move to the element and clicks (without releasing) in the middle of the given element.
Java Python C# Ruby JavaScript Kotlin import org.</description>
    </item>
    
    <item>
      <title>Working with cookies</title>
      <link>https://www.selenium.dev/documentation/ko/support_packages/working_with_cookies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.selenium.dev/documentation/ko/support_packages/working_with_cookies/</guid>
      <description>Page being translated from English to Korean. Do you speak Korean? Help us to translate it by sending us pull requests!
 A cookie is a small piece of data that is sent from a website and stored in your computer. Cookies are mostly used to recognise the user and load the stored information.
WebDriver API provides a way to interact with cookies with built-in methods:
Add Cookie It is used to add a cookie to the current browsing context.</description>
    </item>
    
    <item>
      <title>Chrome Devtools</title>
      <link>https://www.selenium.dev/documentation/ko/support_packages/chrome_devtools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.selenium.dev/documentation/ko/support_packages/chrome_devtools/</guid>
      <description>Page being translated from English to Korean. Do you speak Korean? Help us to translate it by sending us pull requests!
 Selenium 4 alpha versions have much awaited native support for Chrome Dev Protocol through &amp;ldquo;DevTools&amp;rdquo; interface. This helps us getting Chrome Development properties such as Application Cache, Fetch, Network, Performance, Profiler, Resource Timing, Security and Target CDP domains etc.
Chrome DevTools is a set of web developer tools built directly into the Google Chrome browser.</description>
    </item>
    
  </channel>
</rss>